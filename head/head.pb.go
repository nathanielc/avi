// Code generated by protoc-gen-go.
// source: head.proto
// DO NOT EDIT!

/*
Package head is a generated protocol buffer package.

It is generated from these files:
	head.proto

It has these top-level messages:
	Vector
	Object
	Score
	Frame
	Meta
*/
package head

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Vector struct {
	X float64 `protobuf:"fixed64,1,opt,name=x" json:"x,omitempty"`
	Y float64 `protobuf:"fixed64,2,opt,name=y" json:"y,omitempty"`
	Z float64 `protobuf:"fixed64,3,opt,name=z" json:"z,omitempty"`
}

func (m *Vector) Reset()                    { *m = Vector{} }
func (m *Vector) String() string            { return proto.CompactTextString(m) }
func (*Vector) ProtoMessage()               {}
func (*Vector) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Object struct {
	ID      uint64  `protobuf:"varint,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	Pos     *Vector `protobuf:"bytes,2,opt,name=pos" json:"pos,omitempty"`
	Radius  float64 `protobuf:"fixed64,3,opt,name=radius" json:"radius,omitempty"`
	Texture string  `protobuf:"bytes,4,opt,name=texture" json:"texture,omitempty"`
}

func (m *Object) Reset()                    { *m = Object{} }
func (m *Object) String() string            { return proto.CompactTextString(m) }
func (*Object) ProtoMessage()               {}
func (*Object) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Object) GetPos() *Vector {
	if m != nil {
		return m.Pos
	}
	return nil
}

type Score struct {
	Fleet string  `protobuf:"bytes,1,opt,name=fleet" json:"fleet,omitempty"`
	Score float64 `protobuf:"fixed64,2,opt,name=score" json:"score,omitempty"`
}

func (m *Score) Reset()                    { *m = Score{} }
func (m *Score) String() string            { return proto.CompactTextString(m) }
func (*Score) ProtoMessage()               {}
func (*Score) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Frame struct {
	Scores  []*Score  `protobuf:"bytes,1,rep,name=scores" json:"scores,omitempty"`
	Objects []*Object `protobuf:"bytes,2,rep,name=objects" json:"objects,omitempty"`
	Deleted []uint64  `protobuf:"varint,3,rep,name=deleted" json:"deleted,omitempty"`
}

func (m *Frame) Reset()                    { *m = Frame{} }
func (m *Frame) String() string            { return proto.CompactTextString(m) }
func (*Frame) ProtoMessage()               {}
func (*Frame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Frame) GetScores() []*Score {
	if m != nil {
		return m.Scores
	}
	return nil
}

func (m *Frame) GetObjects() []*Object {
	if m != nil {
		return m.Objects
	}
	return nil
}

type Meta struct {
	FPS int32 `protobuf:"varint,1,opt,name=FPS,json=fPS" json:"FPS,omitempty"`
}

func (m *Meta) Reset()                    { *m = Meta{} }
func (m *Meta) String() string            { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()               {}
func (*Meta) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*Vector)(nil), "head.Vector")
	proto.RegisterType((*Object)(nil), "head.Object")
	proto.RegisterType((*Score)(nil), "head.Score")
	proto.RegisterType((*Frame)(nil), "head.Frame")
	proto.RegisterType((*Meta)(nil), "head.Meta")
}

var fileDescriptor0 = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x44, 0x90, 0xc1, 0x6a, 0x02, 0x31,
	0x10, 0x86, 0x89, 0xd9, 0x8d, 0x38, 0x4a, 0x29, 0x43, 0x29, 0x39, 0x95, 0x92, 0x42, 0xe9, 0xc9,
	0x83, 0xbe, 0x82, 0x08, 0x3d, 0x94, 0x4a, 0x16, 0x7a, 0x5f, 0xdd, 0x91, 0x2a, 0xb6, 0x91, 0x6c,
	0x84, 0xd5, 0xa7, 0x6f, 0x32, 0xd9, 0xa5, 0xb7, 0xfd, 0xf2, 0xf3, 0xcf, 0x7c, 0xb3, 0x00, 0xdf,
	0x54, 0x37, 0xf3, 0xb3, 0x77, 0xc1, 0x61, 0x91, 0xbe, 0xcd, 0x02, 0xd4, 0x17, 0xed, 0x82, 0xf3,
	0x38, 0x03, 0xd1, 0x69, 0xf1, 0x2c, 0xde, 0x84, 0x15, 0x5d, 0xa2, 0xab, 0x1e, 0x65, 0xba, 0x26,
	0xba, 0x69, 0x99, 0xe9, 0x66, 0x8e, 0xa0, 0x3e, 0xb7, 0xc7, 0xd8, 0xc2, 0x3b, 0x18, 0xbd, 0xaf,
	0xb8, 0x54, 0xd8, 0xd1, 0x61, 0x85, 0x4f, 0x20, 0xcf, 0xae, 0xe5, 0xde, 0x74, 0x31, 0x9b, 0xf3,
	0xb6, 0x3c, 0xde, 0xa6, 0x00, 0x1f, 0x41, 0xf9, 0xba, 0x39, 0x5c, 0xda, 0x7e, 0x58, 0x4f, 0xa8,
	0x61, 0x1c, 0xa8, 0x0b, 0x17, 0x4f, 0xba, 0x88, 0xc1, 0xc4, 0x0e, 0x68, 0x96, 0x50, 0x56, 0x3b,
	0xe7, 0x09, 0x1f, 0xa0, 0xdc, 0x9f, 0x88, 0x02, 0x6f, 0x9b, 0xd8, 0x0c, 0xe9, 0xb5, 0x4d, 0x71,
	0xaf, 0x9a, 0xc1, 0xfc, 0x42, 0xb9, 0xf6, 0xf5, 0x0f, 0xe1, 0x0b, 0x28, 0x7e, 0x69, 0x63, 0x4b,
	0x46, 0xa5, 0x69, 0x56, 0xe2, 0x89, 0xb6, 0x8f, 0xf0, 0x15, 0xc6, 0x8e, 0xcf, 0x49, 0xe2, 0xf2,
	0x5f, 0x3c, 0xdf, 0x68, 0x87, 0x30, 0x49, 0x36, 0x74, 0xa2, 0x40, 0x4d, 0xb4, 0x97, 0xf1, 0xe2,
	0x01, 0x8d, 0x86, 0xe2, 0x83, 0x42, 0x8d, 0xf7, 0x20, 0xd7, 0x9b, 0x8a, 0x0d, 0x4b, 0x2b, 0xf7,
	0x9b, 0x6a, 0xab, 0xf8, 0x5f, 0x2f, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x82, 0x4e, 0xb1, 0x78,
	0x79, 0x01, 0x00, 0x00,
}
